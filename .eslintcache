[{"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\index.js":"1","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\redux\\rootReducer.js":"2","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\App.js":"3","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\redux\\Reducer\\userReducer.js":"4","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\Footer\\index.js":"5","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\LandingPage\\index.js":"6","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\JumbotronDown\\index.js":"7","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\Header\\index.js":"8","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\Information\\index.js":"9","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\JumbotronUp\\index.js":"10","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\LeafletMap\\index.js":"11","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\redux\\Action\\userAction.js":"12","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\LoginPage\\index.js":"13","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\RegisterPage\\index.js":"14","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\redux\\Action\\actionTypes.js":"15","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\Features\\index.js":"16","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\Profile\\index.js":"17","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\About\\index.js":"18","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\Dashboard\\index.js":"19","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\ContactPage\\index.js":"20","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\Navbar2\\index.js":"21","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\Navbar1\\index.js":"22","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\Onboarding\\index.js":"23","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\Faq\\index.js":"24","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\Content\\index.js":"25","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\VideoContent\\index.js":"26","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\Navbar\\index.js":"27","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\Route.js":"28","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\redux\\Reducer\\contentReducer.js":"29","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\redux\\Action\\contentAction.js":"30","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\AdminContent\\index.js":"31","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\AdminDashboard\\index.js":"32","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\Videos\\index.js":"33","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\AddContent\\index.js":"34","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\UpdateContent\\index.js":"35","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\Sidebar\\index.js":"36","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\HistoryUser\\index.js":"37","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\HistoryUser\\chooseMenu.js":"38","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\HistoryUser\\index.js":"39","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\HistoryUser\\tracking.js":"40","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\HistoryUser\\workout.js":"41"},{"size":889,"mtime":1614955413848,"results":"42","hashOfConfig":"43"},{"size":240,"mtime":1614955413874,"results":"44","hashOfConfig":"43"},{"size":2060,"mtime":1614955710480,"results":"45","hashOfConfig":"43"},{"size":1728,"mtime":1614955525570,"results":"46","hashOfConfig":"43"},{"size":2928,"mtime":1614955413829,"results":"47","hashOfConfig":"43"},{"size":449,"mtime":1614955413865,"results":"48","hashOfConfig":"43"},{"size":2493,"mtime":1614965139854,"results":"49","hashOfConfig":"43"},{"size":180,"mtime":1614011592779,"results":"50","hashOfConfig":"43"},{"size":1596,"mtime":1614011592780,"results":"51","hashOfConfig":"43"},{"size":2025,"mtime":1614955413833,"results":"52","hashOfConfig":"43"},{"size":790,"mtime":1614011592787,"results":"53","hashOfConfig":"43"},{"size":4606,"mtime":1614962351531,"results":"54","hashOfConfig":"43"},{"size":3445,"mtime":1615014198160,"results":"55","hashOfConfig":"43"},{"size":3035,"mtime":1614956206601,"results":"56","hashOfConfig":"43"},{"size":745,"mtime":1614955968229,"results":"57","hashOfConfig":"43"},{"size":2434,"mtime":1615016165092,"results":"58","hashOfConfig":"43"},{"size":6568,"mtime":1614955413866,"results":"59","hashOfConfig":"43"},{"size":3923,"mtime":1614955413850,"results":"60","hashOfConfig":"43"},{"size":753,"mtime":1614011592794,"results":"61","hashOfConfig":"43"},{"size":1863,"mtime":1614955413860,"results":"62","hashOfConfig":"43"},{"size":1217,"mtime":1614955413839,"results":"63","hashOfConfig":"43"},{"size":2613,"mtime":1614955413835,"results":"64","hashOfConfig":"43"},{"size":2687,"mtime":1614955684170,"results":"65","hashOfConfig":"43"},{"size":3681,"mtime":1614955413864,"results":"66","hashOfConfig":"43"},{"size":7342,"mtime":1614955413862,"results":"67","hashOfConfig":"43"},{"size":1761,"mtime":1614955413869,"results":"68","hashOfConfig":"43"},{"size":1278,"mtime":1614934595639,"results":"69","hashOfConfig":"43"},{"size":2260,"mtime":1615020409398,"results":"70","hashOfConfig":"43"},{"size":872,"mtime":1614955413873,"results":"71","hashOfConfig":"43"},{"size":2136,"mtime":1614955413872,"results":"72","hashOfConfig":"43"},{"size":3182,"mtime":1614955413856,"results":"73","hashOfConfig":"43"},{"size":446,"mtime":1614955413857,"results":"74","hashOfConfig":"43"},{"size":4186,"mtime":1614955413871,"results":"75","hashOfConfig":"43"},{"size":13706,"mtime":1614955413853,"results":"76","hashOfConfig":"43"},{"size":12642,"mtime":1614955413868,"results":"77","hashOfConfig":"43"},{"size":1222,"mtime":1614955413841,"results":"78","hashOfConfig":"43"},{"size":424,"mtime":1615027691710,"results":"79","hashOfConfig":"43"},{"size":1246,"mtime":1615019969809,"results":"80","hashOfConfig":"43"},{"size":257,"mtime":1615018511832,"results":"81","hashOfConfig":"43"},{"size":744,"mtime":1615027488771,"results":"82","hashOfConfig":"43"},{"size":375,"mtime":1615027793251,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1t9eyf8",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\index.js",[],["173","174"],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\redux\\rootReducer.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\App.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\redux\\Reducer\\userReducer.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\Footer\\index.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\LandingPage\\index.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\JumbotronDown\\index.js",["175","176","177"],"import React, { useEffect } from \"react\";\r\nimport jumbotronImage from \"../../assets/img/jumbotron/image1.png\";\r\nimport { googleSignin } from \"../../redux/Action/userAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useGoogleLogin, GoogleLogin } from \"react-google-login\";\r\n\r\nconst JumbotronDown = () => {\r\n  const { signIn, loaded } = useGoogleLogin({\r\n    onSuccess: \"\",\r\n    onAutoLoadFinished: \"\",\r\n    clientId: \"\",\r\n    cookiePolicy: \"\",\r\n    loginHint: \"\",\r\n    hostedDomain: \"\",\r\n    autoLoad: \"\",\r\n    isSignedIn: \"\",\r\n    fetchBasicProfile: \"\",\r\n    redirectUri: \"\",\r\n    discoveryDocs: \"\",\r\n    onFailure: \"\",\r\n    uxMode: \"\",\r\n    scope: \"\",\r\n    accessType: \"\",\r\n    responseType: \"\",\r\n    jsSrc: \"\",\r\n    onRequest: \"\",\r\n    prompt,\r\n  });\r\n\r\n  const googleAuth = useSelector((state) => state.users.google);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleGoogle = (e) => {\r\n    dispatch(googleSignin());\r\n    window.location.href = googleAuth;\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(googleSignin());\r\n  }, [dispatch]);\r\n\r\n  // const responseGoogle = (response) => {\r\n  //   console.log(\"google response =>\", response);\r\n  // };\r\n\r\n  console.log(\"Google Auth =>\", googleAuth);\r\n  // console.log(\"Sign IN =>\", signIn);\r\n\r\n  return (\r\n    <>\r\n      {/* <GoogleLogin\r\n        clientId=\"114486350621-53onku2b35dmbdk4euc4er63sh09i9ek.apps.googleusercontent.com\"\r\n        buttonText=\"Login\"\r\n        onSuccess={googleAuth}\r\n        onFailure={responseGoogle}\r\n        cookiePolicy={\"single_host_origin\"}\r\n      /> */}\r\n      <div\r\n        className=\"jumbotron-down\"\r\n        style={{ backgroundImage: `url(${jumbotronImage})` }}\r\n      >\r\n        <h1>Join Sportsman for free</h1>\r\n        <div>\r\n          <button className=\"fb\">\r\n            <i className=\"fab fa-facebook-f\"></i>&nbsp; Facebook\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button onClick={handleGoogle} className=\"google\">\r\n            <i className=\"fab fa-google\"></i>&nbsp; Google\r\n          </button>\r\n        </div>\r\n        {/* <a href=\"#\">Signup with email</a> */}\r\n        <p>\r\n          By signing up for Sportsman, you agree to the Terms of Service. View\r\n          our Privacy Policy.\r\n        </p>\r\n      </div>\r\n      <div className=\"subscription\">\r\n        <h3>Sportsman Subscription</h3>\r\n        <div className=\"explore-button\">\r\n          <button>Explore</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JumbotronDown;\r\n","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\Header\\index.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\Information\\index.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\JumbotronUp\\index.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\LeafletMap\\index.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\redux\\Action\\userAction.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\LoginPage\\index.js",["178"],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\RegisterPage\\index.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\redux\\Action\\actionTypes.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\Features\\index.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\Profile\\index.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\About\\index.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\Dashboard\\index.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\ContactPage\\index.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\Navbar2\\index.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\Navbar1\\index.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\Onboarding\\index.js",["179"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { putBoardingData } from '../../redux/Action/userAction';\r\nimport Logo from '../../assets/img/logo/Logo.png';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FormGroup, Button } from 'reactstrap';\r\n\r\nconst OnBoarding = (props) => {\r\n\tuseEffect(() => {\r\n\t\tdocument.title = `On Board`;\r\n\t});\r\n\r\n\tconst token = localStorage.getItem('token');\r\n\tconst history = useHistory();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [gender, setGender] = useState('');\r\n\tconst [level, setLevel] = useState('');\r\n\r\n\tconst handleHome = () => {\r\n\t\thistory.push('/');\r\n\t};\r\n\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst body = {\r\n\t\t\tgender: gender,\r\n\t\t\tlevel: level,\r\n\t\t};\r\n\t\tdispatch(putBoardingData(token, body)).then(() => props.history.push('/'));\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('ini gender', gender);\r\n\t\tconsole.log('ini level', level);\r\n\t}, [gender, level]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='bg-onboarding'>\r\n\t\t\t\t<img onClick={handleHome} className='login-logo' src={Logo} alt='sportsman' />\r\n\t\t\t\t<div className='onboarding-container'>\r\n\t\t\t\t\t<h2>Select Gender</h2>\r\n\t\t\t\t\t<div className='form__group field'>\r\n\t\t\t\t\t\t<FormGroup tag='fieldset'>\r\n\t\t\t\t\t\t\t<FormGroup check>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Button color=\"danger\" size=\"lg\" block onClick={(e) => setGender(e.target.value)} name='gender' value='male' >Male</Button>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Button color=\"primary\" size=\"lg\" block onClick={(e) => setGender(e.target.value)} name='gender' value='female' >Female</Button>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Select level</h2>\r\n\t\t\t\t\t<div className='form__group field'>\r\n\t\t\t\t\t\t<FormGroup tag='fieldset'>\r\n\t\t\t\t\t\t\t<FormGroup check>\t\r\n        \t\t\t\t\t\t<Button color=\"success\" size=\"lg\" block onClick={(e) => setLevel(e.target.value)} name='level' value='1' >Often</Button>\r\n        \t\t\t\t\t\t<Button color=\"warning\" size=\"lg\" block onClick={(e) => setLevel(e.target.value)} name='level' value='2' >Sometimes</Button>\r\n        \t\t\t\t\t\t<Button color=\"danger\" size=\"lg\" block onClick={(e) => setLevel(e.target.value)} name='level' value='3' >Never</Button>\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<button onClick={onSubmit} className='signin-button'>\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<div className='redirect'></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default OnBoarding;\r\n","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\Faq\\index.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\Content\\index.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\VideoContent\\index.js",["180"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport YouTube from \"react-youtube\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\n\r\nconst VideoContent = () => {\r\n  const { id } = useParams();\r\n  let [count, setCount] = useState(5);\r\n\r\n  const maxCount = 0;\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"640\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCount((count -= 1));\r\n      if (count === maxCount) {\r\n        clearInterval(interval);\r\n      }\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const onReady = (e) => {\r\n    console.log(\"e target =>\", e.target);\r\n    e.target.pauseVideo();\r\n    setTimeout(function () {\r\n      e.target.playVideo();\r\n    }, 5000);\r\n    setInterval(() => {\r\n      console.log(\"Pause Video\");\r\n      e.target.pauseVideo();\r\n      setInterval(() => {\r\n        console.log(\"Play Video\");\r\n        e.target.playVideo();\r\n      }, 11000);\r\n      if (e.target.currentTime === e.target.getDuration()) {\r\n        clearInterval();\r\n      }\r\n    }, 16000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div class=\"video-content-container\">\r\n        <div class=\"video-container\">\r\n          <YouTube videoId={id} opts={opts} onReady={onReady} />\r\n          {/* <h4>{count === 0 ? \"START\" : count}</h4> */}\r\n          <CountdownCircleTimer\r\n            isPlaying\r\n            duration={5}\r\n            colors={[\r\n              [\"#004777\", 0.33],\r\n              [\"#F7B801\", 0.33],\r\n              [\"#A30000\", 0.33],\r\n            ]}\r\n          >\r\n            {({ remainingTime }) =>\r\n              remainingTime === 0 ? (\r\n                \"Start\"\r\n              ) : (\r\n                <div className=\"timer\">{remainingTime}</div>\r\n              )\r\n            }\r\n          </CountdownCircleTimer>\r\n        </div>\r\n        <div class=\"content-sidebar\">This is Sidebar</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VideoContent;\r\n","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\Navbar\\index.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\Route.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\redux\\Reducer\\contentReducer.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\redux\\Action\\contentAction.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\AdminContent\\index.js",["181"],"import React, { useState, useEffect } from \"react\";\r\n// import Navbar from \"../../components/Navbar1\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Row, Col, Table, Button } from \"reactstrap\";\r\nimport Sidebar from \"../../components/Sidebar\";\r\nimport { deleteContent, getContent } from \"../../redux/Action/contentAction\";\r\n\r\nconst AdminContent = () => {\r\n  useEffect(() => {\r\n    document.title = \"Add Content\";\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n  const contents = useSelector((state) => state.content.content);\r\n  const token = localStorage.getItem(\"token\");\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getContent(token));\r\n  }, [dispatch, token]);\r\n  console.log(\"contents =>\", contents);\r\n\r\n  const handleDelete = (id) => {\r\n    // history.push(`admin-content/${id}`);\r\n    dispatch(deleteContent(token, id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md=\"3\">\r\n          <Sidebar />\r\n        </Col>\r\n        <Col className=\"mt-5 \" md=\"9\">\r\n          <Button\r\n            onClick={() => history.push(`add-content`)}\r\n            outline\r\n            color=\"primary\"\r\n            className=\"mr-1 mb-3\"\r\n          >\r\n            Add New Workout\r\n          </Button>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Workout Name</th>\r\n                <th>Gender</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {contents.length === 0 || undefined ? (\r\n                <h4>Loading...</h4>\r\n              ) : (\r\n                <>\r\n                  {contents.map((content, i) => (\r\n                    <tr key={i}>\r\n                      <th scope=\"row\">{i + 1}</th>\r\n                      <td>{content.title}</td>\r\n                      <td>{content.gender}</td>\r\n                      <td>\r\n                        <Button\r\n                          onClick={() =>\r\n                            history.push(`update-content/${content._id}`)\r\n                          }\r\n                          outline\r\n                          color=\"warning\"\r\n                          className=\"mr-1\"\r\n                        >\r\n                          <i\r\n                            className=\"fas fa-edit\"\r\n                            style={{ fontSize: \"20px\" }}\r\n                          ></i>\r\n                        </Button>\r\n                        <Button\r\n                          onClick={() => handleDelete(content._id)}\r\n                          outline\r\n                          color=\"danger\"\r\n                          className=\"mr-1\"\r\n                        >\r\n                          <i\r\n                            className=\"fas fa-trash-alt\"\r\n                            style={{ fontSize: \"20px\" }}\r\n                          ></i>\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </>\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default AdminContent;\r\n","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\AdminDashboard\\index.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\Videos\\index.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\AddContent\\index.js",["182"],"import React, { useState, useEffect } from \"react\";\r\n// import Navbar from \"../../components/Navbar1\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Container,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Form,\r\n  Button,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport Sidebar from \"../../components/Sidebar\";\r\nimport { postContent } from \"../../redux/Action/contentAction\";\r\n\r\nconst AddContent = () => {\r\n  useEffect(() => {\r\n    document.title = \"Add Content\";\r\n  }, []);\r\n\r\n  // const [number, setNumber] = useState(1);\r\n\r\n  // const [inputList, setInputList] = useState([\r\n  //   {\r\n  //     url: \"\",\r\n  //     timer: \"\",\r\n  //   },\r\n  // ]);\r\n\r\n  const [input, setInput] = useState({\r\n    title: \"\",\r\n    image: \"\",\r\n    equipment: \"\",\r\n    time: \"\",\r\n    gender: \"\",\r\n    intensity: \"\",\r\n    description: \"\",\r\n    url1: \"\",\r\n    time1: \"\",\r\n    url2: \"\",\r\n    time2: \"\",\r\n    url3: \"\",\r\n    time3: \"\",\r\n    url4: \"\",\r\n    time4: \"\",\r\n    url5: \"\",\r\n    time5: \"\",\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  // const handleChangeUrl = (e, i) => {\r\n  //   const list = [...inputList];\r\n  //   list[i][e.target.name] = e.target.value;\r\n  //   setInputList(list);\r\n  // };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(postContent(token, input));\r\n  };\r\n\r\n  const handleChangeInput = (e) => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // const handleAddInput = () => {\r\n  //   setInputList([...inputList, { url: \"\", timer: \"\" }]);\r\n  //   setNumber(number + 1);\r\n  // };\r\n  // const handleRemoveInput = (i) => {\r\n  //   const list = [...inputList];\r\n  //   list.splice(i, 1);\r\n  //   setInputList(list);\r\n  // };\r\n  // console.log(\"input List =>\", inputList);\r\n\r\n  console.log(\"input =>\", input);\r\n  return (\r\n    <>\r\n      <Row>\r\n        {/* <Navbar /> */}\r\n        <Col md=\"3\">\r\n          <Sidebar />\r\n        </Col>\r\n        <Col md=\"9\">\r\n          <Container className=\"mt-4 mb-2 video-content-add-container\">\r\n            <Form onSubmit={handleSubmit}>\r\n              <Row>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\">Title</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name={`title`}\r\n                    // value={inp.title}\r\n                    placeholder=\"Title\"\r\n                    type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"ml-4\">\r\n                  <Label for=\"exampleEmail\">Image</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name=\"image\"\r\n                    // value={inp.image}\r\n                    placeholder=\"Image\"\r\n                    type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n              <FormGroup className=\"col-md-4\">\r\n                <Label for=\"exampleText\">Description</Label>\r\n                <Input\r\n                  onChange={(e) => handleChangeInput(e)}\r\n                  type=\"textarea\"\r\n                  name=\"description\"\r\n                  id=\"exampleText\"\r\n                />\r\n              </FormGroup>\r\n              <Row>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\">Time</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name=\"time\"\r\n                    // value={inp.image}\r\n                    placeholder=\"Time\"\r\n                    type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"ml-4\">\r\n                  <Label for=\"exampleEmail\">Equipment</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name=\"equipment\"\r\n                    // value={inp.image}\r\n                    placeholder=\"Time\"\r\n                    type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n\r\n              <Row>\r\n                <FormGroup tag=\"fieldset\" row>\r\n                  <legend className=\"col-form-label col-sm-2\">Gender</legend>\r\n                  <Col sm={10}>\r\n                    <FormGroup check>\r\n                      <Input\r\n                        type=\"radio\"\r\n                        name=\"gender\"\r\n                        id=\"radio2-option1\"\r\n                        value=\"male\"\r\n                        onChange={(e) => handleChangeInput(e)}\r\n                      />\r\n                      <Label check for=\"radio2-option1\">\r\n                        Male\r\n                      </Label>\r\n                    </FormGroup>\r\n                    <FormGroup check>\r\n                      <Input\r\n                        type=\"radio\"\r\n                        name=\"gender\"\r\n                        id=\"radio2-option2\"\r\n                        value=\"female\"\r\n                        onChange={(e) => handleChangeInput(e)}\r\n                      />\r\n                      <Label check for=\"radio2-option2\">\r\n                        Female\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup tag=\"fieldset\" row className=\"ml-4\">\r\n                  <legend className=\"col-form-label col-sm-2\">Intensity</legend>\r\n                  <Col sm={10}>\r\n                    <FormGroup check>\r\n                      <Input\r\n                        type=\"radio\"\r\n                        name=\"intensity\"\r\n                        id=\"radio2-option1\"\r\n                        value=\"1\"\r\n                        onChange={(e) => handleChangeInput(e)}\r\n                      />\r\n                      <Label check for=\"radio2-option1\">\r\n                        1\r\n                      </Label>\r\n                    </FormGroup>\r\n                    <FormGroup check>\r\n                      <Input\r\n                        type=\"radio\"\r\n                        name=\"intensity\"\r\n                        id=\"radio2-option2\"\r\n                        value=\"2\"\r\n                        onChange={(e) => handleChangeInput(e)}\r\n                      />\r\n                      <Label check for=\"radio2-option2\">\r\n                        2\r\n                      </Label>\r\n                    </FormGroup>\r\n                    <FormGroup check>\r\n                      <Input\r\n                        type=\"radio\"\r\n                        name=\"intensity\"\r\n                        id=\"radio2-option2\"\r\n                        value=\"3\"\r\n                        onChange={(e) => handleChangeInput(e)}\r\n                      />\r\n                      <Label check for=\"radio2-option2\">\r\n                        3\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </FormGroup>\r\n              </Row>\r\n\r\n              <Row>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\">Url 1</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name=\"url1\"\r\n                    // value={inp.image}\r\n                    placeholder=\"Url 1\"\r\n                    type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"ml-4\">\r\n                  <Label for=\"exampleEmail\">Time 1</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name=\"time1\"\r\n                    // value={inp.image}\r\n                    placeholder=\"Time\"\r\n                    type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\">Url 2</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name=\"url2\"\r\n                    // value={inp.image}\r\n                    placeholder=\"Url 2\"\r\n                    type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"ml-4\">\r\n                  <Label for=\"exampleEmail\">Time 2</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name=\"time2\"\r\n                    // value={inp.image}\r\n                    placeholder=\"Time 2\"\r\n                    type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\">Url 3</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name=\"url3\"\r\n                    // value={inp.image}\r\n                    placeholder=\"Url 3\"\r\n                    type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"ml-4\">\r\n                  <Label for=\"exampleEmail\">Time 3</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name=\"time3\"\r\n                    // value={inp.image}\r\n                    placeholder=\"Time 3\"\r\n                    type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\">Url 4</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name=\"url4\"\r\n                    // value={inp.image}\r\n                    placeholder=\"Url 4\"\r\n                    type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"ml-4\">\r\n                  <Label for=\"exampleEmail\">Time 4</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name=\"time4\"\r\n                    // value={inp.image}\r\n                    placeholder=\"Time 4\"\r\n                    type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\">Url 5</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name=\"url5\"\r\n                    // value={inp.image}\r\n                    placeholder=\"Url 5\"\r\n                    type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"ml-4\">\r\n                  <Label for=\"exampleEmail\">Time 5</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name=\"time5\"\r\n                    // value={inp.image}\r\n                    placeholder=\"Time 5\"\r\n                    type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n              {/* {inputList.map((inp, i) => {\r\n                return (\r\n                  <>\r\n                    <Row>\r\n                      <FormGroup>\r\n                        <Label for=\"examplePassword\">URL</Label>\r\n                        <Input\r\n                          onChange={(e) => handleChangeUrl(e, i)}\r\n                          // value={inp.url}\r\n                          name={`url${number}`}\r\n                          type=\"text\"\r\n                          placeholder=\"URL\"\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup className=\"ml-4\">\r\n                        <Label for=\"examplePassword\">Timer</Label>\r\n                        <Input\r\n                          onChange={(e) => handleChangeUrl(e, i)}\r\n                          // value={inp.timer}\r\n                          name={`timer${number}`}\r\n                          type=\"text\"\r\n                          placeholder=\"Timer\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Row>\r\n                    {inputList.length !== 1 && (\r\n                      <Button\r\n                        outline\r\n                        color=\"danger\"\r\n                        className=\"mr-2 ml-1  \"\r\n                        onClick={() => handleRemoveInput(i)}\r\n                      >\r\n                        <i className=\"fas fa-minus-circle\"></i>\r\n                      </Button>\r\n                    )}\r\n                    {inputList.length - 1 === i && (\r\n                      <Button\r\n                        outline\r\n                        color=\"primary\"\r\n                        onClick={() => handleAddInput(i)}\r\n                      >\r\n                        <i className=\"fas fa-plus-circle\"></i>\r\n                      </Button>\r\n                    )}\r\n                  </>\r\n                );\r\n              })} */}\r\n              <br />\r\n              <Button outline color=\"success\" className=\"col-md-4 mt-2 mb-2\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default AddContent;\r\n","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\UpdateContent\\index.js",["183"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Form,\r\n  Button,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport Sidebar from \"../../components/Sidebar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getContentById, putContent } from \"../../redux/Action/contentAction\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst UpdateContent = () => {\r\n  useEffect(() => {\r\n    document.title = \"Update Content\";\r\n  }, []);\r\n\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n  const token = localStorage.getItem(\"token\");\r\n  const content = useSelector((state) => state.content.video);\r\n\r\n  const [input, setInput] = useState(content);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(putContent(token, input, id));\r\n  };\r\n\r\n  const handleChangeInput = (e) => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getContentById(token, id));\r\n  }, []);\r\n\r\n  console.log(\"get one input =>\", input);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        {/* <Navbar /> */}\r\n        <Col md=\"3\">\r\n          <Sidebar />\r\n        </Col>\r\n        <Col md=\"9\">\r\n          <Container className=\"mt-4 mb-2 video-content-add-container\">\r\n            <Form onSubmit={handleSubmit}>\r\n              <Row>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\">Title</Label>\r\n                  <Input\r\n                    name=\"title\"\r\n                    // name={`title`}\r\n                    // value={inp.title}\r\n                    placeholder=\"Title\"\r\n                    type=\"text\"\r\n                    value={input.title}\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"ml-4\">\r\n                  <Label for=\"exampleEmail\">Image</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    name=\"image\"\r\n                    placeholder=\"Image\"\r\n                    type=\"text\"\r\n                    value={input.image}\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n              <FormGroup className=\"col-md-4\">\r\n                <Label for=\"exampleText\">Description</Label>\r\n                <Input\r\n                  onChange={(e) => handleChangeInput(e)}\r\n                  type=\"textarea\"\r\n                  name=\"description\"\r\n                  id=\"exampleText\"\r\n                  value={input.description}\r\n                />\r\n              </FormGroup>\r\n              <Row>\r\n                {/* <FormGroup>\r\n                  <Label for=\"exampleEmail\">Time</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name=\"time\"\r\n                    // value={inp.image}\r\n                    placeholder=\"Time\"\r\n                    type=\"text\"\r\n                    value={input.time}\r\n                  />\r\n                </FormGroup> */}\r\n                <FormGroup className=\"ml-4\">\r\n                  <Label for=\"exampleEmail\">Equipment</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name=\"equipment\"\r\n                    // value={inp.image}\r\n                    placeholder=\"Time\"\r\n                    type=\"text\"\r\n                    value={input.equipment}\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n\r\n              <Row>\r\n                <FormGroup tag=\"fieldset\" row>\r\n                  <legend className=\"col-form-label col-sm-2\">Gender</legend>\r\n                  <Col sm={10}>\r\n                    <FormGroup check>\r\n                      <Input\r\n                        type=\"radio\"\r\n                        name=\"gender\"\r\n                        id=\"radio2-option1\"\r\n                        value=\"male\"\r\n                        onChange={(e) => handleChangeInput(e)}\r\n                        checked={input.gender === \"male\"}\r\n                      />\r\n                      <Label check for=\"radio2-option1\">\r\n                        Male\r\n                      </Label>\r\n                    </FormGroup>\r\n                    <FormGroup check>\r\n                      <Input\r\n                        type=\"radio\"\r\n                        name=\"gender\"\r\n                        id=\"radio2-option2\"\r\n                        value=\"female\"\r\n                        checked={input.gender === \"female\"}\r\n                        onChange={(e) => handleChangeInput(e)}\r\n                      />\r\n                      <Label check for=\"radio2-option2\">\r\n                        Female\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup tag=\"fieldset\" row className=\"ml-4\">\r\n                  <legend className=\"col-form-label col-sm-2\">Intensity</legend>\r\n                  <Col sm={10}>\r\n                    <FormGroup check>\r\n                      <Input\r\n                        type=\"radio\"\r\n                        name=\"intensity\"\r\n                        id=\"radio2-option1\"\r\n                        value=\"low\"\r\n                        onChange={(e) => handleChangeInput(e)}\r\n                        checked={input.gender === \"low\"}\r\n                      />\r\n                      <Label check for=\"radio2-option1\">\r\n                        Low\r\n                      </Label>\r\n                    </FormGroup>\r\n                    <FormGroup check>\r\n                      <Input\r\n                        type=\"radio\"\r\n                        name=\"intensity\"\r\n                        id=\"radio2-option2\"\r\n                        value=\"medium\"\r\n                        onChange={(e) => handleChangeInput(e)}\r\n                        checked={input.gender === \"medium\"}\r\n                      />\r\n                      <Label check for=\"radio2-option2\">\r\n                        Medium\r\n                      </Label>\r\n                    </FormGroup>\r\n                    <FormGroup check>\r\n                      <Input\r\n                        type=\"radio\"\r\n                        name=\"intensity\"\r\n                        id=\"radio2-option2\"\r\n                        value=\"high\"\r\n                        onChange={(e) => handleChangeInput(e)}\r\n                        checked={input.gender === \"high\"}\r\n                      />\r\n                      <Label check for=\"radio2-option2\">\r\n                        High\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </FormGroup>\r\n              </Row>\r\n\r\n              <Row>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\">Url 1</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name=\"url1\"\r\n                    // value={inp.image}\r\n                    placeholder=\"Url 1\"\r\n                    type=\"text\"\r\n                    // value={input.video[0].videoUrl}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"ml-4\">\r\n                  <Label for=\"exampleEmail\">Time 1</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name=\"time1\"\r\n                    // value={inp.image}\r\n                    placeholder=\"Time\"\r\n                    type=\"text\"\r\n                    // value={input.video[0].time}\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\">Url 2</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name=\"url2\"\r\n                    // value={inp.image}\r\n                    placeholder=\"Url 2\"\r\n                    type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"ml-4\">\r\n                  <Label for=\"exampleEmail\">Time 2</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name=\"time2\"\r\n                    // value={inp.image}\r\n                    placeholder=\"Time 2\"\r\n                    type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\">Url 3</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name=\"url3\"\r\n                    // value={inp.image}\r\n                    placeholder=\"Url 3\"\r\n                    type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"ml-4\">\r\n                  <Label for=\"exampleEmail\">Time 3</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name=\"time3\"\r\n                    // value={inp.image}\r\n                    placeholder=\"Time 4\"\r\n                    type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\">Url 4</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name=\"url4\"\r\n                    // value={inp.image}\r\n                    placeholder=\"Url 5\"\r\n                    type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"ml-4\">\r\n                  <Label for=\"exampleEmail\">Time 5</Label>\r\n                  <Input\r\n                    onChange={(e) => handleChangeInput(e)}\r\n                    // name=\"title\"\r\n                    name=\"time5\"\r\n                    // value={inp.image}\r\n                    placeholder=\"Time 5\"\r\n                    type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n              {/* {inputList.map((inp, i) => {\r\n                return (\r\n                  <>\r\n                    <Row>\r\n                      <FormGroup>\r\n                        <Label for=\"examplePassword\">URL</Label>\r\n                        <Input\r\n                          onChange={(e) => handleChangeUrl(e, i)}\r\n                          // value={inp.url}\r\n                          name={`url${number}`}\r\n                          type=\"text\"\r\n                          placeholder=\"URL\"\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup className=\"ml-4\">\r\n                        <Label for=\"examplePassword\">Timer</Label>\r\n                        <Input\r\n                          onChange={(e) => handleChangeUrl(e, i)}\r\n                          // value={inp.timer}\r\n                          name={`timer${number}`}\r\n                          type=\"text\"\r\n                          placeholder=\"Timer\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Row>\r\n                    {inputList.length !== 1 && (\r\n                      <Button\r\n                        outline\r\n                        color=\"danger\"\r\n                        className=\"mr-2 ml-1  \"\r\n                        onClick={() => handleRemoveInput(i)}\r\n                      >\r\n                        <i className=\"fas fa-minus-circle\"></i>\r\n                      </Button>\r\n                    )}\r\n                    {inputList.length - 1 === i && (\r\n                      <Button\r\n                        outline\r\n                        color=\"primary\"\r\n                        onClick={() => handleAddInput(i)}\r\n                      >\r\n                        <i className=\"fas fa-plus-circle\"></i>\r\n                      </Button>\r\n                    )}\r\n                  </>\r\n                );\r\n              })} */}\r\n              <br />\r\n              <Button outline color=\"primary\" className=\"col-md-4 mt-2 mb-2\">\r\n                Update\r\n              </Button>\r\n            </Form>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateContent;\r\n","D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\Sidebar\\index.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\pages\\HistoryUser\\index.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\HistoryUser\\chooseMenu.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\HistoryUser\\index.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\HistoryUser\\tracking.js",[],"D:\\Dio\\Glints\\Final Project\\team-sportsman-frontend\\src\\components\\HistoryUser\\workout.js",["184","185"],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":5,"column":26,"nodeType":"192","messageId":"193","endLine":5,"endColumn":37},{"ruleId":"190","severity":1,"message":"194","line":8,"column":11,"nodeType":"192","messageId":"193","endLine":8,"endColumn":17},{"ruleId":"190","severity":1,"message":"195","line":8,"column":19,"nodeType":"192","messageId":"193","endLine":8,"endColumn":25},{"ruleId":"190","severity":1,"message":"196","line":19,"column":8,"nodeType":"192","messageId":"193","endLine":19,"endColumn":12},{"ruleId":"190","severity":1,"message":"197","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":21},{"ruleId":"198","severity":1,"message":"199","line":22,"column":26,"nodeType":"200","endLine":22,"endColumn":27},{"ruleId":"190","severity":1,"message":"201","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":25},{"ruleId":"190","severity":1,"message":"197","line":3,"column":23,"nodeType":"192","messageId":"193","endLine":3,"endColumn":34},{"ruleId":"198","severity":1,"message":"202","line":43,"column":6,"nodeType":"203","endLine":43,"endColumn":8,"suggestions":"204"},{"ruleId":"190","severity":1,"message":"205","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":16},{"ruleId":"190","severity":1,"message":"206","line":5,"column":9,"nodeType":"192","messageId":"193","endLine":5,"endColumn":24},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'GoogleLogin' is defined but never used.","Identifier","unusedVar","'signIn' is assigned a value but never used.","'loaded' is assigned a value but never used.","'data' is assigned a value but never used.","'useSelector' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'count' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'token'. Either include them or remove the dependency array.","ArrayExpression",["209"],"'Button' is defined but never used.","'currentLocation' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},"Update the dependencies array to be: [dispatch, id, token]",{"range":"212","text":"213"},[1046,1048],"[dispatch, id, token]"]